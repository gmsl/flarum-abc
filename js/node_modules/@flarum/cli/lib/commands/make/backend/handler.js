"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const base_command_1 = (0, tslib_1.__importDefault)(require("../../../base-command"));
const handler_command_1 = require("../../../steps/stubs/backend/handler-command");
const handler_1 = require("../../../steps/stubs/backend/handler");
const gen_ext_scaffolder_1 = require("../../../steps/gen-ext-scaffolder");
class ApiController extends base_command_1.default {
    steps(stepManager) {
        return stepManager.atomicGroup((stepManager) => {
            stepManager.namedStep('handlerCommand', new handler_command_1.GenerateHandlerCommandStub(this.STUB_PATH, (0, gen_ext_scaffolder_1.genExtScaffolder)())).step(new handler_1.GenerateHandlerStub(this.STUB_PATH, (0, gen_ext_scaffolder_1.genExtScaffolder)()), {}, [
                {
                    sourceStep: 'handlerCommand',
                    exposedName: 'className',
                    modifier: (value) => `${value}Handler`,
                },
                {
                    sourceStep: 'handlerCommand',
                    exposedName: 'class',
                    consumedName: 'handlerCommandClass',
                },
            ], {
                validatorClass: '',
                repositoryClass: '',
            });
        });
    }
}
exports.default = ApiController;
ApiController.description = 'Generate a domain logic handler class';
ApiController.flags = Object.assign({}, base_command_1.default.flags);
ApiController.args = [...base_command_1.default.args];
