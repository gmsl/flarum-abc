"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GenerateApiControllerStub = void 0;
const tslib_1 = require("tslib");
const chalk_1 = (0, tslib_1.__importDefault)(require("chalk"));
const validation_1 = require("../../../utils/validation");
const php_base_1 = require("../php-base");
class GenerateApiControllerStub extends php_base_1.BasePhpStubStep {
    constructor() {
        super(...arguments);
        this.type = 'Generate Api Controller Class';
        this.additionalExposes = [];
        this.phpClassParams = ['serializerClass', 'handlerCommandClass'];
        this.schema = {
            recommendedSubdir: 'Api/Controller',
            sourceFile: 'backend/api-controller/${classType}.php',
            params: [
                {
                    name: 'className',
                    type: 'text',
                    message: 'Api Controller class name',
                    validate: validation_1.Validator.className,
                },
                {
                    name: 'classNamespace',
                    type: 'text',
                    message: 'Class Namespace',
                },
                {
                    name: 'classType',
                    type: 'autocomplete',
                    message: 'Api Controller type',
                    choices: ['Normal', 'List', 'Show', 'Create', 'Update', 'Delete'].map((type) => ({
                        title: type,
                        value: type.toLowerCase(),
                    })),
                },
                {
                    name: 'serializerClass',
                    type: 'text',
                    message: `Serializer Class (${chalk_1.default.dim('Vendor\\Path\\Serializer')})`,
                    validate: validation_1.Validator.class,
                },
                {
                    name: 'serializerClassName',
                    type: 'text',
                    message: 'Serializer class name',
                },
                {
                    name: 'handlerCommandClass',
                    type: 'text',
                    message: `Handler Command Class (${chalk_1.default.dim('Vendor\\Path\\Command')}) (Optional)`,
                    validate: validation_1.Validator.optionalClass,
                    optional: true,
                },
                {
                    name: 'handlerCommandClassName',
                    type: 'text',
                    message: 'Handler command class name',
                },
            ],
        };
    }
}
exports.GenerateApiControllerStub = GenerateApiControllerStub;
