"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GenerateHandlerStub = void 0;
const tslib_1 = require("tslib");
/* eslint-disable no-warning-comments */
const chalk_1 = (0, tslib_1.__importDefault)(require("chalk"));
const validation_1 = require("../../../utils/validation");
const php_base_1 = require("../php-base");
class GenerateHandlerStub extends php_base_1.BasePhpStubStep {
    constructor() {
        super(...arguments);
        this.type = 'Generate Handler Class';
        this.additionalExposes = [];
        this.additionalImplicitParams = ['repositoryClass', 'repositoryClassName', 'validatorClass', 'validatorClassName'];
        this.phpClassParams = ['handlerCommandClass', 'repositoryClass', 'validatorClass'];
        this.schema = {
            recommendedSubdir: 'Command',
            sourceFile: 'backend/handler/handler.php',
            params: [
                {
                    name: 'className',
                    type: 'text',
                    message: `Handler class name (example: ${chalk_1.default.dim('EditModelHandler')})`,
                    validate: validation_1.Validator.className,
                },
                {
                    name: 'classNamespace',
                    type: 'text',
                    message: 'Class Namespace',
                },
                {
                    name: 'handlerCommandClass',
                    type: 'text',
                    message: `Handler Command class (${chalk_1.default.dim('Vendor\\Path\\Command')})`,
                    validate: validation_1.Validator.className,
                },
                {
                    name: 'handlerCommandClassName',
                    type: 'text',
                    message: 'Handler command class name',
                },
                {
                    name: 'repositoryClass',
                    message: '',
                    optional: true,
                    type: 'text',
                },
                {
                    name: 'repositoryClassName',
                    type: 'text',
                    message: 'Repository Class Name',
                },
                {
                    name: 'validatorClass',
                    message: '',
                    optional: true,
                    type: 'text',
                },
                {
                    name: 'validatorClassName',
                    type: 'text',
                    message: 'Validator Class Name',
                },
            ],
        };
    }
}
exports.GenerateHandlerStub = GenerateHandlerStub;
