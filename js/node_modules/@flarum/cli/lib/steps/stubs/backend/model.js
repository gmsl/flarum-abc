"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GenerateModelStub = void 0;
const validation_1 = require("../../../utils/validation");
const model_name_1 = require("../../../utils/model-name");
const php_base_1 = require("../php-base");
class GenerateModelStub extends php_base_1.BasePhpStubStep {
    constructor() {
        super(...arguments);
        this.type = 'Generate Model Class';
        this.additionalExposes = ['className', 'migrationName', 'modelPluralSnake', 'modelPluralKebab'];
        this.phpClassParams = [];
        this.schema = {
            recommendedSubdir: '',
            sourceFile: 'backend/model.php',
            params: [
                {
                    name: 'className',
                    type: 'text',
                    message: 'Model class name',
                    validate: validation_1.Validator.className,
                },
                {
                    name: 'classNamespace',
                    type: 'text',
                    message: 'Class Namespace',
                },
                {
                    name: 'tableName',
                    type: 'text',
                    message: 'Table name (Optional)',
                    validate: validation_1.Validator.tableName,
                    optional: true,
                },
            ],
        };
    }
    async compileParams(fs, paths, io) {
        const params = await super.compileParams(fs, paths, io);
        params.modelPluralSnake = (0, model_name_1.pluralSnakeCaseModel)(params.className);
        params.modelPluralKebab = (0, model_name_1.pluralKebabCaseModel)(params.className);
        if (!params.tableName) {
            params.tableName = params.modelPluralSnake;
        }
        params.migrationName = `create_${params.tableName}_table`;
        return params;
    }
}
exports.GenerateModelStub = GenerateModelStub;
