"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaseJsStep = void 0;
const tslib_1 = require("tslib");
const globby_1 = (0, tslib_1.__importDefault)(require("globby"));
const mem_fs_editor_1 = require("mem-fs-editor");
const IMPORTS_REGEX = /((^import\s+(?:([\s\w*,{}]+)\s+from)?\s*["']?([\s\w./@\\-]+)\3?["']?\s*;?\s*)*)(.*)/m;
const INIT_REGEX = /^(app\.initializers\.add\('[^']+',\s*\(\)\s*=>\s*{)$/m;
class BaseJsStep {
    constructor() {
        this.composable = true;
        this.exposes = [];
    }
    async run(fs, paths, io, _providers) {
        const fsEditor = (0, mem_fs_editor_1.create)(fs);
        const frontend = await io.getParam({ name: 'frontend', message: 'Frontend', type: 'text' });
        let frontends = [frontend];
        if (frontend === 'common') {
            frontends = ['admin', 'forum'];
        }
        for (const frontend of frontends) {
            const fsSrcFilePaths = globby_1.default.sync(paths.package(`js/src/${frontend}/*.{js,jsx,ts,tsx}`));
            fsSrcFilePaths.forEach(async (match) => {
                /**
                 * @TODO look into using https://esprima.org/ instead
                 */
                const currContents = fsEditor.read(match);
                const imports = await this.getImports(frontend, paths, io);
                const definition = await this.getDefinition(io);
                const newContents = currContents.replace(INIT_REGEX, `$1\n  ${definition}\n`).replace(IMPORTS_REGEX, `$1${imports}\n\n$5`);
                fsEditor.write(match, newContents);
            });
        }
        return fs;
    }
    importPath(frontend, classNamespace) {
        let path = `../${classNamespace}`;
        path = path.replace(`../${frontend}/`, './');
        return path;
    }
    getExposed(_paths, _paramProvider) {
        return {};
    }
}
exports.BaseJsStep = BaseJsStep;
