import { Store } from 'mem-fs';
import { ParamDef, IO } from 'boilersmith/io';
import { Paths } from 'boilersmith/paths';
import { ExtenderDef } from '../../providers/php-provider';
import { Step } from 'boilersmith/step-manager';
import { FlarumProviders } from '../../providers';
interface UserProvidedParam extends Omit<ParamDef, 'type'> {
    type: string;
}
export interface ExtenderGenerationSchema {
    extenderDef: ExtenderDef;
    params: UserProvidedParam[];
}
export declare abstract class BaseExtenderStep implements Step<FlarumProviders> {
    abstract type: string;
    protected abstract schema: ExtenderGenerationSchema;
    composable: boolean;
    exposes: never[];
    getExposed(): Record<string, unknown>;
    protected params: Record<string, unknown>;
    run(fs: Store, paths: Paths, io: IO, providers: FlarumProviders): Promise<Store>;
    protected compileParams(io: IO): Promise<Record<string, unknown>>;
}
export {};
