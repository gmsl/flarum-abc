import { Store } from 'mem-fs';
import { IO } from 'boilersmith/io';
import { Paths } from 'boilersmith/paths';
import { Step } from 'boilersmith/step-manager';
import { FlarumProviders } from '../../providers';
import { Scaffolder } from 'boilersmith/scaffolding/scaffolder';
import { ExtensionModules, ExtensionParams } from '../gen-ext-scaffolder';
export declare class MonorepoCreate implements Step<FlarumProviders> {
    type: string;
    composable: boolean;
    protected monorepoConfPath?: string;
    protected scaffolder: Scaffolder<ExtensionParams, ExtensionModules>;
    constructor(scaffolder: Scaffolder<ExtensionParams, ExtensionModules>, monorepoConfPath?: string);
    run(fs: Store, paths: Paths, io: IO, providers: FlarumProviders): Promise<Store>;
    exposes: never[];
    getExposed(): Record<string, unknown>;
}
