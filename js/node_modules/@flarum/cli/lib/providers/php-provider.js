"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PhpSubsystemProvider = exports.ParamTypeType = exports.ExpressionType = void 0;
const child_process_1 = require("child_process");
var ExpressionType;
(function (ExpressionType) {
    ExpressionType["SCALAR"] = "scalar";
    ExpressionType["CLASS_CONST"] = "class_const";
    ExpressionType["CLOSURE"] = "closure";
    ExpressionType["VARIABLE"] = "variable";
})(ExpressionType = exports.ExpressionType || (exports.ExpressionType = {}));
var ParamTypeType;
(function (ParamTypeType) {
    ParamTypeType["CLASS"] = "class";
    ParamTypeType["PRIMITIVE"] = "primitive";
})(ParamTypeType = exports.ParamTypeType || (exports.ParamTypeType = {}));
class PhpSubsystemProvider {
    constructor(phpPath) {
        this.phpPath = phpPath;
    }
    withExtender(extendContents, extenderDef) {
        const input = JSON.stringify({
            'extend.php': extendContents,
            op: 'extender.add',
            params: extenderDef,
        });
        const res = (0, child_process_1.execSync)(`php ${this.phpPath}`, { input });
        if (!res) {
            throw new Error(`The PHP subsystem returned an invalid value: ${res}`);
        }
        return res.toString();
    }
}
exports.PhpSubsystemProvider = PhpSubsystemProvider;
