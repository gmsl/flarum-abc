"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.currParamValues = exports.promptParamValues = exports.getParamName = exports.isComputedParam = exports.isPromptParam = void 0;
function isPromptParam(param) {
    return 'prompt' in param;
}
exports.isPromptParam = isPromptParam;
function isComputedParam(param) {
    return 'uses' in param;
}
exports.isComputedParam = isComputedParam;
function getParamName(param) {
    return isComputedParam(param) ? param.name : param.prompt.name;
}
exports.getParamName = getParamName;
async function withComputedParamValues(params, paths, paramVals) {
    const vals = Object.assign({}, paramVals);
    const computedParams = params.filter(isComputedParam);
    for (const p of computedParams) {
        const depValues = p.uses.map((key) => vals[key]);
        // eslint-disable-next-line no-await-in-loop
        vals[p.name] = await p.compute(paths, ...depValues);
    }
    return vals;
}
async function promptParamValues(params, paths, io) {
    const promptParams = params.filter(isPromptParam);
    const paramVals = {};
    for (const p of promptParams) {
        // eslint-disable-next-line no-await-in-loop
        paramVals[p.prompt.name] = await io.getParam(p.prompt);
    }
    return withComputedParamValues(params, paths, paramVals);
}
exports.promptParamValues = promptParamValues;
async function currParamValues(params, fs, paths, io) {
    var _a;
    const promptParams = params.filter(isPromptParam);
    const paramVals = {};
    for (const p of promptParams) {
        // eslint-disable-next-line no-await-in-loop
        paramVals[p.prompt.name] = (_a = (await p.getCurrVal(fs, paths))) !== null && _a !== void 0 ? _a : (await io.getParam(p.prompt));
    }
    return withComputedParamValues(params, paths, paramVals);
}
exports.currParamValues = currParamValues;
