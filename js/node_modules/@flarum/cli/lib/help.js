"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const core_1 = require("@oclif/core");
const chalk_1 = (0, tslib_1.__importDefault)(require("chalk"));
const COLON_REGEX = /:/g;
function prepCommand(command) {
    var _a, _b;
    return Object.assign({}, command, { id: chalk_1.default.green((_b = (_a = command.id) === null || _a === void 0 ? void 0 : _a.replace(COLON_REGEX, ' ')) !== null && _b !== void 0 ? _b : '') });
}
function prepTopic(topic) {
    return Object.assign({}, topic, { name: chalk_1.default.green(topic.name.replace(COLON_REGEX, ' ')) });
}
function colorHeaders(text) {
    return text.replace(/(TOPICS|TOPIC|DESCRIPTION|USAGE|COMMANDS|VERSION|ARGUMENTS|OPTIONS)/g, (match) => {
        return chalk_1.default.yellow(match);
    });
}
class Help extends core_1.Help {
    formatRoot() {
        return colorHeaders(super.formatRoot());
    }
    formatCommand(command) {
        return colorHeaders(super.formatCommand(prepCommand(command)));
    }
    formatCommands(commands) {
        return colorHeaders(super.formatCommands(commands.map(prepCommand)));
    }
    formatTopic(topic) {
        return colorHeaders(super.formatTopic(prepTopic(topic)).replace(COLON_REGEX, ' '));
    }
    formatTopics(topics) {
        return colorHeaders(super.formatTopics(topics.map(prepTopic)));
    }
}
exports.default = Help;
